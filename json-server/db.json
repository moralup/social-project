{
  "posts": [
    {
      "id": "1",
      "title": "json-server",
      "userId": "1"
    },
    {
      "id": "2",
      "title": "json-server",
      "userId": "2"
    },
    {
      "id": "3",
      "title": "json-server",
      "userId": "3"
    }
  ],
  "articles": [
    {
      "id": "1",
      "title": "Новые возможности в TypeScript 4.5",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://habrastorage.org/webt/iw/u6/24/iwu624zqqotvo05frkqgtk1wqjq.jpeg",
      "views": 752,
      "createdAt": "27.09.2023",
      "userId": "2",
      "type": [
        "IT",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "2",
      "title": "Vue 3: Введение и ключевые изменения",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/27a/2a0/11c/27a2a011ced3c69b0e5327b770ba620a.png",
      "views": 10467,
      "createdAt": "01.12.2012",
      "userId": "1",
      "type": [
        "IT",
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Привет! Меня зовут Влад, я frontend-разработчик в компании SimbirSoft. Мне приходилось создавать приложения как на старых версиях Vue, так и на новых. Причем многие из моих коллег вполне успешно разрабатывают на Vue 2 и не спешат переходить на Vue3, даже спустя два года после релиза.",
            "Что же касается бизнеса и владельцев продуктов, в моей практике также встречались кейсы и примеры, когда заказчики не понимали всех преимуществ использования новой версии.",
            "В этой статье попытался раскрыть новшества, которые могут стать «триггером» для миграции на новую технологию для обеих заинтересованных групп. Поговорим об экосистеме Vue 3, о новинках и пользе для разработчиков и бизнеса. И, разумеется, сравним Vue 2 и Vue 3 с технической точки зрения. Также рассмотрим одно из главных нововведений фреймворка – Composition API, раскроем технические нюансы и определим лучшие кейсы использования нового API."
          ]
        },
        {
          "id": "2",
          "type": "TEXT",
          "title": "История появления Vue",
          "paragraphs": [
            "Vue – это Javascript-фреймворк для разработки пользовательских интерфейсов",
            "Создателем и главным разработчиком фреймворка является бывший работник Google Эван Ю. Первый коммит Vue был сделан в июне 2013 года и назывался Seed.js. Но, как выяснилось, имя seed было уже занято в npm, и название изменили на Vue.",
            "Эван изначально писал фреймворк, который понравился бы ему как разработчику. Но первые несколько сотен звезд на GitHub мотивировали его создать продукт, который будет приятно и эффективно использовать.",
            "Сейчас Vue – это крупнейший проект, который пользуется колоссальной финансовой и технической поддержкой партнёров и разработчиков из всего мира. В итоге то, что изначально задумывалось как инструмент для внутреннего пользования компании, переросло в один из лучших фреймворков для JavaScript."
          ]
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Преимущества Vue 3",
          "paragraphs": [
            "Концепция и основная идея новой версии Vue 3 возникли в 2018 году. На текущий момент времени с момента выхода Vue 3 версии прошло почти два года (дата релиза – сентябрь 2020 года).",
            "Она включает в себя масштабные изменения в исходном коде и новый API. В ней также значительно улучшена производительность – в среднем 1,5-2 раза быстрее прошлой. Исходный код фреймворка был переписан с нуля, а при помощи использования TypeScript изменена система реактивности. А Vetur, официальное расширение VSCode, теперь поддерживает проверку типов у шаблона и свойств с использованием улучшенной внутренней типизации Vue 3."
          ]
        }
      ]
    },
    {
      "id": "3",
      "title": "Как оптимизировать производительность React приложений",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://habr.com/share/publication/490526/06db8a458b6ff01a1d0c8fd18d48bddd/",
      "views": 540,
      "createdAt": "02.01.2022",
      "userId": "1",
      "type": [
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    },
    {
      "id": "4",
      "title": "Обзор последних изменений в ECMAScript 2023",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://habr.com/share/publication/728066/ee1125c72a991ec42e928a0074647815/",
      "views": 320,
      "createdAt": "26.04.2022",
      "userId": "3",
      "type": [
        "IT",
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "5",
      "title": "Пять лучших библиотек для работы с данными в JavaScript",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://cdn1.tenchat.ru/static/vbc-gostinder/2023-10-04/5131e508-0ccf-44eb-a12e-80c57258e5ae.jpg?width=1396&height=872&fmt=webp",
      "views": 3422,
      "createdAt": "18.04.2021",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы. Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений.",
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг.",
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.",
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.",
            "В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке.",
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift. На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает. В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания. Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift.",
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow. Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире."
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "Зачем использовать Node.js в 2024 году",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://wilku.top/wp-content/uploads/2023/09/1696086249_554_Exploring-MERN-MEAN-and-MEVN.jpg",
      "views": 1243,
      "createdAt": "24.06.2023",
      "userId": "1",
      "type": [
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    },
    {
      "id": "7",
      "title": "Переход с AngularJS на Angular: что нужно знать",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://onextdigital.com/wp-content/uploads/2023/05/imgpsh_fullsize_anim-7.png",
      "views": 3501,
      "createdAt": "14.11.2021",
      "userId": "2",
      "type": [
        "IT",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "8",
      "title": "Будущее веб-разработки: перспективы для Svelte",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://ploshadka.net/wp-content/uploads/logo/svelte.png",
      "views": 2432,
      "createdAt": "26.02.2022",
      "userId": "1",
      "type": [
        "SCIENCE",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы. Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений.",
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг.",
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.",
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.",
            "В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке.",
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift. На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает. В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания. Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift.",
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow. Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире."
          ]
        }
      ]
    },
    {
      "id": "9",
      "title": "Как улучшить SEO вашего сайта с помощью Next.js",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://habrastorage.org/webt/c-/al/bd/c-albdpditvqgjnovvsg9_oq26q.png",
      "views": 1022,
      "createdAt": "01.09.2022",
      "userId": "1",
      "type": [
        "SCIENCE",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    },
    {
      "id": "10",
      "title": "Топ-10 фреймворков для разработки одностраничных приложений",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://techmonster.co.il/wp-content/uploads/2021/10/מילון-בקאנד-1536x864.jpg",
      "views": 701,
      "createdAt": "23.05.2020",
      "userId": "3",
      "type": [
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "11",
      "title": "Новые подходы к анимации в CSS",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://itchef.ru/wp-content/uploads/2016/11/maxresdefault-2023-02-27T102841.485.jpg",
      "views": 3125,
      "createdAt": "18.02.2019",
      "userId": "1",
      "type": [
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы. Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений.",
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг.",
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.",
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.",
            "В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке.",
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift. На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает. В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания. Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift.",
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow. Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире."
          ]
        }
      ]
    },
    {
      "id": "12",
      "title": "Использование JavaScript для автоматизации задач в браузере",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://i.pinimg.com/736x/0b/fb/19/0bfb195cf470155c3b10f6f177ac5cc1.jpg",
      "views": 9032,
      "createdAt": "16.06.2020",
      "userId": "1",
      "type": [
        "IT",
        "SCIENCE",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    },
    {
      "id": "13",
      "title": "Почему стоит попробовать Deno вместо Node.js",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://i.pinimg.com/originals/ca/1d/fc/ca1dfc8de0bfe114e1c4576d3356b3dc.jpg",
      "views": 1242,
      "createdAt": "15.03.2021",
      "userId": "1",
      "type": [
        "IT",
        "SCIENCE",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "14",
      "title": "Пять секретов эффективного тестирования в JavaScript",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://file-uploads.teachablecdn.com/1f814d5bf0e54428859b8c20cf7721e1/deb491e413c54f6f9c29f43a311c0bf0",
      "views": 1580,
      "createdAt": "08.03.2023",
      "userId": "1",
      "type": [
        "IT",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы. Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений.",
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг.",
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.",
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.",
            "В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке.",
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift. На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает. В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания. Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift.",
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow. Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире."
          ]
        }
      ]
    },
    {
      "id": "15",
      "title": "Как управлять состоянием в React: Redux против Context API",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://i.ytimg.com/vi/9qXraeTRrs8/maxresdefault.jpg",
      "views": 2000,
      "createdAt": "21.09.2020",
      "userId": "1",
      "type": [
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    },
    {
      "id": "16",
      "title": "Создание прогрессивных веб-приложений с помощью Workbox",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://www.mage-world.com/media/wysiwyg/MIA/PWA_app.jpg",
      "views": 891,
      "createdAt": "11.06.2020",
      "userId": "2",
      "type": [
        "IT",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "17",
      "title": "Введение в WebAssembly: будущее веб-приложений",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://nuancesprog.ru/wp-content/uploads/2023/12/WebAssembly-pattern.png",
      "views": 760,
      "createdAt": "21.03.2019",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы. Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений.",
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг.",
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.",
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.",
            "В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке.",
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift. На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает. В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания. Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift.",
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow. Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире."
          ]
        }
      ]
    },
    {
      "id": "18",
      "title": "Как безопасно работать с API в вашем фронтенд приложении",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://habr.com/share/publication/736866/bb636e6f4aabd6850eb0ae698057f218/",
      "views": 451,
      "createdAt": "27.06.2020",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    },
    {
      "id": "19",
      "title": "Обзор новых возможностей HTML5 и CSS3",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://openwebsolutions.in/blog/wp-content/uploads/2018/01/banner-1.jpg",
      "views": 252,
      "createdAt": "20.05.2021",
      "userId": "1",
      "type": [
        "IT",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "20",
      "title": "Пять распространенных ошибок в JavaScript и как их избежать",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://вебджем.рф/800/600/http/basic.jsexpert.net/wp-content/uploads/2016/04/Untitled-1.jpg",
      "views": 2041,
      "createdAt": "16.03.2020",
      "userId": "1",
      "type": [
        "IT",
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы. Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений.",
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг.",
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.",
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.",
            "В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке.",
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift. На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает. В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания. Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift.",
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow. Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире."
          ]
        }
      ]
    },
    {
      "id": "21",
      "title": "Google Apps Script и с чем его едят",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/5f2/bc0/259/5f2bc0259e943cbe1353159efdb05e12.png",
      "views": 4031,
      "createdAt": "06.02.2019",
      "userId": "1",
      "type": [
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    },
    {
      "id": "22",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 22,
      "createdAt": "05.0.2018",
      "userId": "3",
      "type": [
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "7",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "8",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "23",
      "title": "В начале этого года Python сместил Java и стал вторым по популярности языком программирования среди разработчиков",
      "subtitle": "Блог компании ITSumma Python * Программирование * Статистика в IT",
      "img": "https://habrastorage.org/webt/ex/ho/a_/exhoa_iuj7ofm4-u4nlmhnw4oyy.png",
      "views": 1123,
      "createdAt": "12.12.2023",
      "userId": "1",
      "type": [
        "IT",
        "SCIENCE",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы. Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений.",
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг.",
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.",
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.",
            "В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке.",
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift. На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает. В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания. Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift.",
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow. Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире."
          ]
        }
      ]
    },
    {
      "id": "24",
      "title": "Как улучшить SEO вашего сайта с помощью Next.js",
      "subtitle": "Блог компании AGIMA JavaScript*",
      "img": "https://meizugid.ru/wp-content/uploads/2023/08/sa2.png",
      "views": 312123,
      "createdAt": "21.05.2020",
      "userId": "2",
      "type": [
        "SCIENCE",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Всем привет! Меня зовут Леша Штанько, я системный администратор и интегратор (если остается время, еще и JS-разработчик :D) в AGIMA. Если представить Google большим айсбергом, то на его верхушке точно разместятся всеми любимые и популярные инструменты, вроде Google Sheets и Google Calendar, а Google Apps Script скроется где-то под толщей воды. Но я считаю, что больше людей должны попробовать этот классный инструмент. Поэтому в этой статье расскажу о его главных достоинствах и поделюсь практическими примерами",
            "Несмотря на популярность продуктов Google, с Apps Script работают немногие в России. Даже слышали о нем не все. Хотя он доступен, и главное — он бесплатный и очень полезный."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/42d/976/9a8/42d9769a8113116585786e70f6672c7c.png",
          "title": "Shut up and give it to me for free"
        },
        {
          "id": "3",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Моя статья носит просветительский характер и ориентирована на тех, кто никогда не пробовал Google Apps Script. В ней я приведу примеры из практики работы с Apps Script в AGIMA. А в конце оставлю ссылки на полезные и обучающие материалы. "
          ]
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "Что такое Google Apps Script и на чем он работает",
          "paragraphs": [
            "Apps Script — платформа на основе JavaScript для быстрой и простой разработки бизнес-решений. Apps Script привязан к конкретной версии JavaScript (ES5). Но чтобы можно было использовать современный синтаксис и функции JavaScript, в Apps Script была добавлена поддержка среды V8, которая, в свою очередь, поддерживает Chrome и Node.js.",
            "Приступим к обзору этого чуда. Прелесть Google Apps Script заключается в том, что при правильной настройке ваша Google-табличка может жить абсолютно самостоятельно: скрипт будет в фоновом режиме собирать, хранить, перебирать, сшивать и сравнивать данные. Для этого достаточно настроить триггеры на вызов функции, когда вам удобно.",
            "У нас в AGIMA есть огромный «ящик» разных инструментов, мы можем настроить под себя любые системы и заставить их работать так, как нам нужно. И при этом изобилии мы активно используем автоматизированные таблички Google Sheets.",
            "Все наши внутренние команды имеют как минимум одну автоматизированную табличку. Например, для команд — это рентабельность по проекту с учетом трека времени, данных из Битрикса, подрядчиков и самого руководителя проекта.",
            "Еще наш финотдел активно использует автоматизированные таблички: следят за расхождениями между затратами, за сроками выплат и актуальностью статусов по документам и т. д. Так 50–100 строчек кода ежедневно экономят нам по 2–3 часа на другие более приоритетные задачи. ",
            "Но вы можете подумать: «Пффф… И это всё? Одна табличка?!» А вот и нет! Благодаря Google Apps Script вы можете дружить между собой столько табличек, сколько вам необходимо. И я сейчас говорю не про листы, а про отдельные файлы даже на других аккаунтах.",
            "И это еще не всё. Благодаря API мы можем тянуть данные из любых систем по обращению, а после — конвертировать их, как нам удобно."
          ]
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "text": "some comment",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "2",
      "text": "some comment 2",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "3",
      "text": "some comment 3",
      "articleId": "1",
      "userId": "2"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "wefwefwefewf",
      "id": "ky5xEtR"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "hello JHON",
      "id": "w6uVCjx"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "<div style=\"color: red\">hello JHON</div>",
      "id": "4ie1IZz"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "\"<div style=\"color: red\">hello JHON</div>",
      "id": "2iaS4aX"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "' <div style=\"color: red\">hello JHON</div>",
      "id": "HSabpVC"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "hello",
      "id": "hwUGNY8"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "fwefe",
      "id": "elWnOfA"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "hello",
      "id": "x6mqJdb"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "hello",
      "id": "zJEEn4O"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "how are u",
      "id": "B6t2ctw"
    },
    {
      "userId": "1",
      "articleId": "1",
      "text": "ваш сайт хуета",
      "id": "V-5AP2b"
    },
    {
      "userId": "1",
      "articleId": "2",
      "text": "wefwefwef",
      "id": "iVqmCW5"
    },
    {
      "userId": "1",
      "articleId": "2",
      "text": "wef",
      "id": "G1lSS33"
    },
    {
      "userId": "1",
      "articleId": "2",
      "text": "wfwefwfw",
      "id": "dLwUMUS"
    },
    {
      "userId": "1",
      "articleId": "22",
      "text": "wef",
      "id": "alPCPvM"
    },
    {
      "articleId": "22",
      "userId": "1",
      "text": "some comm",
      "id": "KBbkuWO"
    },
    {
      "articleId": "22",
      "userId": "1",
      "text": "some comment for article with id 22",
      "id": "I8SJ4VU"
    },
    {
      "articleId": "19",
      "userId": "1",
      "text": "на этот раз 19 статья",
      "id": "uQebg0D"
    },
    {
      "articleId": "19",
      "userId": "1",
      "text": "agen article with id 19/ hope be reload",
      "id": "f55YJcJ"
    },
    {
      "articleId": "19",
      "userId": "1",
      "text": "цуацуцуа",
      "id": "ENBLqyT"
    },
    {
      "articleId": "19",
      "userId": "1",
      "text": "цуацуцуа",
      "id": "ulrwuf-"
    },
    {
      "articleId": "19",
      "userId": "1",
      "text": "wfwefw",
      "id": "B13xeZ0"
    },
    {
      "articleId": "19",
      "userId": "1",
      "text": "wfwefw",
      "id": "jmlNSlt"
    },
    {
      "articleId": "19",
      "userId": "1",
      "text": "wfwefewf",
      "id": "IBkTSCU"
    },
    {
      "articleId": "11",
      "userId": "1",
      "text": "wefwef",
      "id": "2okP8N0"
    },
    {
      "articleId": "11",
      "userId": "1",
      "text": "wefwef",
      "id": "UzYa0t4"
    },
    {
      "articleId": "11",
      "userId": "1",
      "text": "wefwef",
      "id": "emQNbK5"
    },
    {
      "articleId": "11",
      "userId": "1",
      "text": "wefwefwef",
      "id": "JhQlb1o"
    },
    {
      "articleId": "11",
      "userId": "1",
      "text": "dswef",
      "id": "aySSApI"
    },
    {
      "articleId": "11",
      "userId": "1",
      "text": "wefwefw",
      "id": "Zf98WrL"
    },
    {
      "articleId": "22",
      "userId": "2",
      "text": "afs",
      "id": "X7Nfh2N"
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "admin",
      "password": "123",
      "roles": [
        "ADMIN",
        "MANAGER",
        "LAWYER"
      ],
      "avatar": "https://i.pinimg.com/736x/7a/8e/b7/7a8eb7cf77bbc04a7a20f315d4630d6c.jpg"
    },
    {
      "id": "2",
      "username": "user",
      "password": "123",
      "roles": [
        "USER",
        "LAWYER"
      ],
      "avatar": "https://i.pinimg.com/736x/7a/8e/b7/7a8eb7cf77bbc04a7a20f315d4630d6c.jpg"
    },
    {
      "id": "3",
      "username": "Vanya",
      "password": "123",
      "roles": [
        "USER",
        "MANAGER"
      ],
      "avatar": "https://i.pinimg.com/736x/7a/8e/b7/7a8eb7cf77bbc04a7a20f315d4630d6c.jpg"
    }
  ],
  "profile": [
    {
      "id": "1",
      "firstName": "FirstCurrent",
      "lastName": "Nema",
      "username": "moraldown12",
      "age": 14,
      "country": "Russia",
      "city": "Moscow",
      "avatar": "https://i.pinimg.com/736x/7a/8e/b7/7a8eb7cf77bbc04a7a20f315d4630d6c.jpg"
    },
    {
      "id": "2",
      "firstName": "Kirill",
      "lastName": "Nema",
      "username": "moraldown12",
      "age": 14,
      "country": "Russia",
      "city": "Moscow",
      "avatar": "https://i.pinimg.com/736x/7a/8e/b7/7a8eb7cf77bbc04a7a20f315d4630d6c.jpg"
    }
  ]
}